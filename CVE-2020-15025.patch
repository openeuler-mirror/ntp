From 50704f496376fb463bafa9700fb70ff8e3ac6d48 Mon Sep 17 00:00:00 2001
Date: Wed, 9 Sep 2020 18:31:28 +0800
Subject: [PATCH] memory leak with AES128CMAC keys

---
 ChangeLog             | 1 +
 libntp/a_md5encrypt.c | 2 +-
 sntp/crypto.c         | 3 ++-
 3 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 35d5d36..f510296 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,6 +1,7 @@
 ---
 (4.2.8p14) 2020/03/03 Released by Harlan Stenn <stenn@ntp.org>
 
+* [Bug 3661] memory leak with AES128CMAC keys <perlinger@ntp.org>
 * [Sec 3610] process_control() should bail earlier on short packets. stenn@
   - Reported by Philippe Antoine
 * [Sec 3596] Highly predictable timestamp attack. <stenn@ntp.org>
diff --git a/libntp/a_md5encrypt.c b/libntp/a_md5encrypt.c
index 8c046f4..57100de 100644
--- a/libntp/a_md5encrypt.c
+++ b/libntp/a_md5encrypt.c
@@ -93,7 +93,7 @@ make_mac(
 		}
 	  cmac_fail:
 		if (ctx)
-			CMAC_CTX_cleanup(ctx);
+			CMAC_CTX_free(ctx);
 	}
 	else
 #   endif /*ENABLE_CMAC*/
diff --git a/sntp/crypto.c b/sntp/crypto.c
index 8ffe006..35e125c 100644
--- a/sntp/crypto.c
+++ b/sntp/crypto.c
@@ -70,7 +70,8 @@ compute_mac(
 		}
 		len = (u_int)slen;
 		
-		CMAC_CTX_cleanup(ctx);
+                if (ctx)
+                        CMAC_CTX_free(ctx);
 		/* Test our AES-128-CMAC implementation */
 		
 	} else	/* MD5 MAC handling */
-- 
1.8.3.1

